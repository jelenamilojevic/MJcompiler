program MJProgram
const char nesto = 'g', nesto2 = 'Q';
const char alfa = 'l';
const int k = 10, m = 30;
const bool nesto3 = true, drugo = false;
const char lose = 'c';
bool tacno;
int a, b[];
int c[]; char d;
{
  int metoda1(int p, char w[], bool t) 
  char x; int y;
  { 
    y = 43;
    y++;
    print(y);
    p = p*2;
    return p;
  }
  
  int metodax(int x, char c, int niz[]) { return 1;}
  
  void metoday() {}
   
  void main() 
  int x[], y,h[];
  char c;
  bool netacno;
  //novtip a;
  int t, l;
  char w[], f,nn[];
  bool b;
  bool nizb[];
  {
    y = 1+9 - metodax(y,c,h);
    print(y);
    print(y,1);
    c= 'c';
    print(c,1);
    print(y-1,1);
    t = -y*2 +1*2;
    print(t);
    read(t);
    print(t);
    x = new int[3];
    //h = x;
    x[0] = t;
    x[1] = 6;
    print(x[0]);
    print(x[1]);
    x[1]++;
    x[0]--;
    x[1+1] = 2;
    x[1*2] = 5+x[0];
    print(x[2]);
    b = x.findAny(5+1);
    print(b);
    w = new char[2];
    w[0] = 'a';
    w[1] = 'c';
    b = w.findAny('d');
    print(b);
    c = eol;
    print(c);
    print('a');
    nizb = new bool[2];
    nizb[0] = true;
    nizb[1] = false;
    print(nizb[0]);
    print(nizb[1]);
    b = nizb.findAny(true);
    print(b);
    print(nizb[0]);
    print(t);
    y = metoda1(x[1],w,b);
    //b = h.findAny(5);
    y = 123;
    l = 0;
    print(eol);
    
    w.foreach(c => print(c););
    nizb.foreach(b => print(b););
    
    print(eol);
    x.foreach(y => {print(y); l++;});
    print(y);
    
    h = x.findAndReplace((4*1+2), a=>4*2);
    h.foreach(a => print(a););
    
    nn = w.findAndReplace('a', c=>'A');
    print(eol);
    
    nn.foreach( c => print(c););
  }
}